# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                               controllers.ApplicationController.index()

# Authentication
GET         /login                                          controllers.RegisterLoginController.showLogin()
POST        /login                                          controllers.RegisterLoginController.login()
GET         /logout                                         controllers.RegisterLoginController.logout()

# Profile
GET         /profile                                        controllers.UserProfileController.showProfile()
POST        /profile                                        controllers.UserProfileController.updateProfile()

# lost password
GET         /lostpassword                                   controllers.PasswordResetController.showPasswordForget()
POST        /lostpassword                                   controllers.PasswordResetController.sendPasswordForget()
GET         /lostpassword/:token                            controllers.PasswordResetController.showPasswordReset(token: java.lang.String)
POST        /lostpassword/:token                            controllers.PasswordResetController.passwordReset(token: java.lang.String)

# Register
GET         /register                                       controllers.RegisterLoginController.showRegister()
POST        /register                                       controllers.RegisterLoginController.register()

# DVD Lists
GET         /copies                                           controllers.ListDvdsController.listdvds(pageNr: java.lang.Integer ?= null)
GET         /copies/forJS                                     controllers.ListDvdsController.listCopiesJS(pageNr: java.lang.Integer ?= null)
GET         /copies/all                                       controllers.ListDvdsController.listAlldvds()
GET         /copies/by/genre/:genreName                       controllers.ListDvdsController.listByGenre(genreName: String)
GET         /copies/by/actor/:actorName                       controllers.ListDvdsController.listByActor(actorName: String)
GET         /copies/by/director/:directorName                 controllers.ListDvdsController.listByDirector(directorName: String)
GET         /copies/by/user/:userName                         controllers.ListDvdsController.listByUser(userName: String)
GET         /copies/lend                                      controllers.ListDvdsController.listLendDvd()
GET         /movies/toReview                                controllers.ListDvdsController.listReviewMovies()
GET         /copies/search                                    controllers.ListDvdsController.searchDvd()
POST        /copies                                           controllers.ListDvdsController.applySearchForm()
GET         /copies/changeViewMode/:viewMode                  controllers.ListDvdsController.changeViewMode(viewMode :String)

# Comment
POST        /movie/:movieId/comment                         controllers.CommentController.addComment(movieId: Long)


# stuff
GET         /image/:dvdId/:imgType/:imgSize                 controllers.DashboardController.streamImage(dvdId: Long, imgType: String, imgSize: String)
GET         /extimage                                       controllers.DashboardController.streamExternalImage()
GET         /gravatar/:userName                             controllers.DashboardController.gravatar(size: java.lang.Integer, userName: String)


# Display the Dvd
GET         /showdvdPopup/:dvdId                            controllers.DashboardController.displayDvd(dvdId: Long)
GET         /showdvd/:dvdId                                 controllers.DashboardController.displayCopyOnPage(dvdId: Long)

# Lend DVD
GET         /copy/:dvdId/lend                               controllers.DashboardController.lendDialogContent(dvdId: Long)
POST        /copy/:dvdId/lend                               controllers.DashboardController.lendDvd(dvdId: Long)
GET         /copy/:dvdId/unlend                             controllers.DashboardController.unLendDialogContent(dvdId: Long)
POST        /copy/:dvdId/unlend                             controllers.DashboardController.unlendDvd(dvdId: Long)

# Barcode Scanning
GET         /barcodescanner                                 controllers.BarcodeController.displayBarcodeScaner()
GET         /barcodescannerws                               controllers.BarcodeController.scanBarcode()


# ADD edit DVD
GET         /copy/add                                       controllers.CopyController.showAddDvd()
POST        /copy/:mode                                     controllers.CopyController.addDvd(mode: String)
GET         /copy/edit/:dvdId                               controllers.CopyController.showEditDvd(dvdId: Long)
GET         /copy/amazon/search/byCode/:code                controllers.CopyController.searchAmazonByCode(code: String, copyId: Long ?= -1)
GET         /copy/amazon/search/byTitle/                    controllers.CopyController.searchAmazonByTitle(title = "")
GET         /copy/amazon/search/byTitle/:title              controllers.CopyController.searchAmazonByTitle(title: String)
GET         /copy/amazon/form/:code/:movieId                controllers.CopyController.showDvdByAmazonAndMovie(code: String, movieId: Long,copyId: Long ?= -1)
GET         /copy/amazon/formfill/:code                     controllers.CopyController.showCopyFormWithAmazonInfo(code: String, copyId: Long ?= -1)
POST        /copy/addMovieByGrabber/                        controllers.CopyController.addMovieByGrabber(grabberType : String)
GET         /copy/searchattr                                controllers.CopyController.searchForCopyAttribute(term: String, attrType:String)


# DELETE DVD
GET         /copy/delete/:dvdId                              controllers.DashboardController.deleteDialogContent(dvdId:Long)
POST        /copy/delete/:dvdId                              controllers.DashboardController.deleteDvd(dvdId:Long)

# MOVIE ROUTES
POST        /movie/addMovieByGrabber/:mode                  controllers.MovieController.addMovieByGrabberId(mode: String, grabberType: String)
GET         /movie/add                                      controllers.MovieController.showAddMovieForm()
GET         /movie/edit/:movieId                            controllers.MovieController.showEditMovieForm(movieId: Long)
GET         /movie/check/:grabberId/:grabberType            controllers.MovieController.checkIfMovieAlreadyExists(grabberId: String, grabberType: String)
POST        /movie/:mode                                    controllers.MovieController.addOrEditMovie(mode: String)
GET         /movies/forselect                               controllers.MovieController.searchMoviesForDvdSelect(term: String)
GET         /movies/searchattr                              controllers.MovieController.searchForMovieAttribute(term: String, attrType:String)

# Shopping cart
GET         /shoppingcart                                   controllers.ShoppingCartController.showShoppingCart()
GET         /shoppingcart/add/:copyId                       controllers.ShoppingCartController.addCopyToCart(copyId: Long)
GET         /shoppingcart/remove/:copyId                    controllers.ShoppingCartController.remCopyFromCart(copyId: Long)
GET         /shoppingcart/menue                             controllers.ShoppingCartController.getShoppingCartMenu()
POST        /shoppincart/checkout                           controllers.ShoppingCartController.checkoutShoppingCart()

# Reservations
GET         /reservations                                   controllers.ReservationsController.showReservations()
GET         /reservations/delete/:reservationIds            controllers.ReservationsController.deleteReservations(reservationIds: String)
GET         /reservations/borrow/:reservationIds            controllers.ReservationsController.borrowReservations(reservationIds: String)
GET         /reserved                                       controllers.ReservationsController.showReserved()
GET         /reserved/delete/:reservationId                 controllers.ReservationsController.deleteReserved(reservationId: Long)
GET         /lentcopies                                     controllers.ReservationsController.showLentCopies()
GET         /lentcopies/unlent/:copyIds                     controllers.ReservationsController.unlentCopies(copyIds: String)
GET         /borrowedcopies                                 controllers.ReservationsController.showBorrowedCopies()

#Bookmark
GET         /bookmark/add/:copyId                           controllers.BookmarksController.bookmarkCopy(copyId: Long)
GET         /bookmark                                       controllers.BookmarksController.listBookmarks(page: Integer ?= 0)
GET         /bookmark/delete/:bookmarkId                    controllers.BookmarksController.removeBookmark(bookmarkId: Long)

#MarkAsViewed
GET         /viewedcopies/list                              controllers.ViewedCopyController.getViewedCopiesForCurrentUser(page: Integer ?= 0)
GET         /viewedcopies/mark/:copyId                      controllers.ViewedCopyController.markCopyAsViewedDialog(copyId: Long)
POST        /viewedcopies/mark/:copyId                      controllers.ViewedCopyController.doMarkCopyAsViewed(copyId: Long, remBookMark: Boolean)

# language
GET         /language/:code                                 controllers.LanguageController.changeLanguage(code: String)


# Grabbers
GET         /grabber/search                                 controllers.InfoGrabberController.searchGrabber(searchTerm = "", grabberType =  "TMDB")
GET         /grabber/:grabberType/search/:searchTerm        controllers.InfoGrabberController.searchGrabber(searchTerm: String, grabberType:  String)
GET         /grabber/:grabberType/:grabberId                controllers.InfoGrabberController.getMovieById(grabberId: String, grabberType:  String)

#RSS
GET         /rssFeeds/displayList                           controllers.RssFeedsController.displayRssFeedLinks
GET         /rssFeeds/lastAddedCopies                       controllers.RssFeedsController.getLastAddedCopies
GET         /rssFeeds/lastWeekAddedCopies                   controllers.RssFeedsController.getLastAddedWeekCopies
GET         /rssFeeds/copyPoster/:copyId                    controllers.RssFeedsController.getPosterImage(copyId: Long)

# EXPORT
GET         /export                                         controllers.ExportMoviesController.displayExportOptions()
GET         /export/xbmc                                    controllers.ExportMoviesController.exportXbmc()

# Javascript routing
GET         /assets/javascripts/routes                      controllers.ApplicationController.jsRoutes()


# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)